import { PublicKey } from 'o1js/dist/node/lib/signature';
import { ZkappCommand } from 'o1js/dist/node/lib/account-update';
import { Types } from 'o1js/dist/node/bindings/mina-transaction/types';
import { NetworkId } from 'o1js/dist/node/mina-signer/src/types';
import { currentTransaction } from 'o1js/dist/node/lib/mina/transaction-context';
import { type FeePayerSpec, type ActionStates, type NetworkConstants, activeInstance, setActiveInstance, Mina, currentSlot, getAccount, hasAccount, getBalance, getNetworkId, getNetworkConstants, getNetworkState, accountCreationFee, fetchEvents, fetchActions, getActions, getProofsEnabled } from 'o1js/dist/node/lib/mina/mina-instance';
import { type Transaction, type PendingTransaction, type IncludedTransaction, type RejectedTransaction, type PendingTransactionStatus, transaction } from 'o1js/dist/node/lib/mina/transaction';
import { filterGroups } from 'o1js/dist/node/lib/mina/transaction-validation';
import { LocalBlockchain } from 'o1js/dist/node/lib/mina/local-blockchain';
export { BerkeleyQANet, LocalBlockchain, Network, currentTransaction, Transaction, type PendingTransaction, type IncludedTransaction, type RejectedTransaction, type PendingTransactionStatus, activeInstance, setActiveInstance, transaction, sender, currentSlot, getAccount, hasAccount, getBalance, getNetworkId, getNetworkConstants, getNetworkState, accountCreationFee, fetchEvents, fetchActions, getActions, FeePayerSpec, ActionStates, faucet, waitForFunding, getProofsEnabled, filterGroups, type NetworkConstants, };
declare const Transaction: {
    fromJSON(json: Types.Json.ZkappCommand): Transaction;
};
/**
 * Represents the Mina blockchain running on a real network
 */
declare function Network(graphqlEndpoint: string): Mina;
declare function Network(options: {
    networkId?: NetworkId;
    mina: string | string[];
    archive?: string | string[];
    lightnetAccountManager?: string;
}): Mina;
/**
 *
 * @deprecated This is deprecated in favor of {@link Mina.Network}, which is exactly the same function.
 * The name `BerkeleyQANet` was misleading because it suggested that this is specific to a particular network.
 */
declare function BerkeleyQANet(graphqlEndpoint: string): Mina;
/**
 * Returns the public key of the current transaction's sender account.
 *
 * Throws an error if not inside a transaction, or the sender wasn't passed in.
 */
declare function sender(): PublicKey;
declare function waitForFunding(address: string): Promise<void>;
/**
 * Requests the [testnet faucet](https://faucet.minaprotocol.com/api/v1/faucet) to fund a public key.
 */
declare function faucet(pub: PublicKey, network?: string): Promise<void>;
